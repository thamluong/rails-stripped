


Rails.logger.info "*" * 80
Rails.logger.info customer.cards.data[0].name
    
Rails.logger.info  "*" * 80
puts  "*" * 80
puts customer.cards.data[0].name
puts  "*" * 80

Rails.logger.info "*" * 80
Rails.logger.info params.inspect
Rails.logger.info "*" * 80


In registrations_controller do not initialize the @email if the current_user is guest to prevent filling the email field with guest-random-number@example.com.


1. Style flash
2. Test nav_link helper
3. CSS changes to align the credit card forms. The change should not break the integration tests.

#	modified:   app/models/stripe_customer.rb                   CLEANUP
#	modified:   app/views/devise/registrations/new.html.erb     CLEAR OUT GUEST USER EMAIL
#	modified:   app/views/sales/new.html.erb					CSS MAGIC REQUIRED

4. On the page that displays : View and download your purchased products. If a customer has just purchased, provide the download details.

A customer has many payments. Create a Payment model to store:

- user_id
- product_id
- amount
- receipt_number

when one_click_checkout and guest_checkout is complete (a customer makes a payment).

5. Refactor this utility:

# Stolen from http://www.railsonmaui.com/blog/2013/05/08/strategies-for-rails-logging-and-error-handling/
class Utility
  # Logs and emails exception
  # Optional args:
  # request: request Used for the ExceptionNotifier
  # info: "A descriptive messsage"
  def self.log_exception e, args
    extra_info = args[:info]

    Rails.logger.error extra_info if extra_info
    Rails.logger.error e.message
    st = e.backtrace.join("\n")
    Rails.logger.error st

    extra_info ||= "<NO DETAILS>"
    request = args[:request]
    env = request ? request.env : nil
    if env
      ExceptionNotifier::Notifier.exception_notification(env, e, :data => {:message => "Exception: #{extra_info}"}).deliver
    else
      ExceptionNotifier::Notifier.background_exception_notification(e, :data => {:message => "Exception: #{extra_info}"}).deliver
     end
  end
end

Change this to use deliver_later using delayed job.
