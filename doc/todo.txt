1. If credit card is about to expire:
	a) Display message reminder to update credit card details after login.
	b) Send an email reminder to update credit card expiration date.

> expiration_date = DateTime.new(2014, 12,1)
 => Mon, 01 Dec 2014 00:00:00 +0000 
> today = DateTime.now
	 => Sun, 23 Nov 2014 23:42:40 -0800 
> checker = today + 30.days
	 => Tue, 23 Dec 2014 23:42:40 -0800 
> checker > expiration_date
	 => true 
> x = today + 2.days
	 => Tue, 25 Nov 2014 23:42:40 -0800 
> x > expiration_date
	 => false 
	
2. Integrate TB 3

3. Refactor this utility:

# Stolen from http://www.railsonmaui.com/blog/2013/05/08/strategies-for-rails-logging-and-error-handling/
class Utility
  # Logs and emails exception
  # Optional args:
  # request: request Used for the ExceptionNotifier
  # info: "A descriptive messsage"
  def self.log_exception e, args
    extra_info = args[:info]

    Rails.logger.error extra_info if extra_info
    Rails.logger.error e.message
    st = e.backtrace.join("\n")
    Rails.logger.error st

    extra_info ||= "<NO DETAILS>"
    request = args[:request]
    env = request ? request.env : nil
    if env
      ExceptionNotifier::Notifier.exception_notification(env, e, :data => {:message => "Exception: #{extra_info}"}).deliver
    else
      ExceptionNotifier::Notifier.background_exception_notification(e, :data => {:message => "Exception: #{extra_info}"}).deliver
     end
  end
end

Change this to use deliver_later using delayed job.
