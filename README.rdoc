= README

==Features

- Guest Checkout
- One click checkout
- Recurring billing : subscribe to a plan
- Update credit card expiration date
- Process subscription payment failures
- Add a new credit card
- Rake task to send email reminders to customers with credit cards about to expire.
- Rake task to test your Stripe Credentials.

Steps to get the application up and running.

* Ruby version
	ruby-2.1.2
	
* RVM version
	rvm 1.25.34 (master) 

* Rails version	
	Rails 4.2.0.beta4

* System dependencies

Uses Stripe javascript version 2. Gem dependencies are kept to the bare minimum to make the codebase lightweight. Check the Gemfile for other dependencies.

* Configuration

Step 1

Login to your stripe account. Copy the API Keys and set Stripe environment variables on your machine.

export STRIPE_PUBLISHABLE_KEY='pk_test_your publishable key' 
export STRIPE_SECRET_KEY='sk_test_your secret key' 

Step 2

Create config/initializers/stripe.rb and initialize the Stripe API Key and Stripe Public Key.

Rails.configuration.stripe = {
  publishable_key: ENV['STRIPE_PUBLISHABLE_KEY'],
  secret_key:      ENV['STRIPE_SECRET_KEY']
}

Stripe.api_key = Rails.configuration.stripe[:secret_key]
STRIPE_PUBLIC_KEY = Rails.configuration.stripe[:publishable_key]

* Database creation

rake db:create
rake db:migrate

* Database initialization

rake db:seed

* How to run the test suite

You must have plans created in your Stripe account. Create one plan that has id of 'gold'.

rake spec:actors spec:models spec:controllers spec:gateways spec:helpers spec:features 

You must be connected to the Internet to run the integration tests (feature specs and some use case specs). 

* Services (job queues, cache servers, search engines, etc.)

None

* Deployment

1. Run rake secret.
2. Set ENV["SECRET_KEY_BASE"] variable to the generated secret.

None

==Articles with Step by Step Instructions

- [Recurring Billing using Stripe API](http://rubyplus.com/articles/941 'Stripe')
- [Stripe Recurring Billing Part 2](http://rubyplus.com/articles/961 'Stripe')
- [Stripe Recurring Billing Part 3 : Integration Testing using Capybara](http://rubyplus.com/articles/1161 'Stripe')
- [Stripe Recurring Billing Part 4 : Pricing Page](http://rubyplus.com/articles/1181 'Stripe')
- [Stripe Recurring Billing Part 5 : Testing using Stripe Ruby Mock Gem](http://rubyplus.com/articles/1191 'Stripe')
- [Stripe Recurring Billing Part 6 : Making Use Cases Explicit to Achieve Traceability in a System](http://rubyplus.com/articles/1201 'Stripe')
- [Stripe Recurring Billing Part 7 : Dealing with Exceptions](http://rubyplus.com/articles/1211 'Stripe')
- [Stripe Recurring Billing Part 8: Using Devise for User Account Management](http://rubyplus.com/articles/1231 'Stripe')
- [Striped Recurring Billing Part 9 : Reusing Integration Tests](http://rubyplus.com/articles/1241 'Stripe')
- [Stripe Guest Checkout](http://rubyplus.com/articles/1251 'Stripe Guest Checkout')
- [Stripe Guest Checkout Part 2 : Optional Account Registration](http://rubyplus.com/articles/1261 'Stripe Guest Checkout Part 2 : Optional Account Registration')
- [Stripe Guest Checkout and Subscriptions : Cleanup](http://rubyplus.com/articles/1281 'Stripe Guest Checkout and Subscriptions : Cleanup')
- [One Click Checkout using Stripe](http://rubyplus.com/articles/1291 'One Click Checkout using Stripe')
- [Using Stripe Webhook to Handle Subscription Payment Failures](http://rubyplus.com/articles/1301 'Using Stripe Webhook to Handle Subscription Payment Failures')
- [Stripe Subscription and Charge Customer Test Improvements](http://rubyplus.com/articles/1311 'Stripe Subscription and Charge Customer Test Improvements')
- [Stripe Recurring Billing : Update Credit Card Expiration](http://rubyplus.com/articles/1321 'Stripe Recurring Billing : Update Credit Card Expiration')
- [Stripe Recurring Billing and Update Credit Card Expiration Cleanup](http://rubyplus.com/articles/1331 'Stripe Recurring Billing and Update Credit Card Expiration Cleanup')
- [Stripe Subscription and Checkout : Test Coverage using SimpleCov](http://rubyplus.com/articles/1341 'Stripe Subscription and Checkout : Test Coverage using SimpleCov')
- [Add New Credit Card using Stripe API](http://rubyplus.com/articles/1351 'Add New Credit Card using Stripe API')
- [Stripe Webhook Testing in Development](http://rubyplus.com/articles/1361 'Stripe Webhook Testing in Development')


== Assumptions

1) Move access over the network to a background job in a later version. 
2) The subscription page must be loaded using https. Refer : [How to Install Alpha SSL certificate using Moonshine for Rails 4.1
](http://rubyplus.com/articles/621 'How to Install Alpha SSL certificate using Moonshine for Rails 4.1
') to read about installing SSL on production.


=== Test Cases

Stripe Key Check
-----------

stripe-key meta-tag must define STRIPE_PUBLIC_KEY
Stripe.setPublishableKey($('meta[name="stripe-key"]').attr('content'));

== About Author

http://about.me/bparanj
http://rubyplus.com/about
http://www.meetup.com/silicon-valley-ruby/
https://github.com/bparanj
https://bitbucket.org/bparanj